import React, { Component } from 'react';
import { Text } from 'react-native';
import PropTypes from 'prop-types';
import moment from "moment";

class Countdown extends Component {
    constructor(props) {
        super(props);
        this.left = null;
        this.state = {
            millisecondsLeft: this.props.finishTime*1000 - (new Date().getTime()),
            show: '',
        }
    }

    componentDidMount() {
        this.left = setInterval(() => {
            this.setState({ millisecondsLeft: this.props.finishTime*1000 - (new Date().getTime()) });
            this.millisecondsToString();
        }, 1000)
    }

    componentWillUnmount() {
        clearInterval(this.left);
    }

    millisecondsToString = () => {
        seconds = this.state.millisecondsLeft / 1000 - (this.state.millisecondsLeft / 1000)%1;
        this.setState({
            show: moment.utc(this.state.millisecondsLeft).format(this.props.format)
        });
        if (seconds === 0) {
            this.props.onFinish();
        }
    }

    addZeroIfNeeded = (num) => {
        if (num < 10) {
            return `0${num}`;
        } else {
            return num;
        }
    }

    render() {
        return (
            <Text style={this.props.textStyle}>{this.state.show}</Text>
        )
    }
}

Countdown.defaultProps = {
    format: 'd:kk:mm:ss'
}

Countdown.propTypes = {
    finishTime: PropTypes.number.isRequired,
    format: PropTypes.string,
    textStyle: Text.propTypes.style,
    onFinish: PropTypes.func
}

export { Countdown };